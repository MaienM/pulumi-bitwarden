// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("bitwarden");

/**
 * Client ID.
 */
export declare const clientId: string | undefined;
Object.defineProperty(exports, "clientId", {
    get() {
        return __config.get("clientId");
    },
    enumerable: true,
});

/**
 * Client Secret. Do not commit this information in Git unless you know what you're doing. Prefer using a Terraform
 * `variable {}` in order to inject this value from the environment.
 */
export declare const clientSecret: string | undefined;
Object.defineProperty(exports, "clientSecret", {
    get() {
        return __config.get("clientSecret");
    },
    enumerable: true,
});

/**
 * Login Email of the Vault.
 */
export declare const email: string | undefined;
Object.defineProperty(exports, "email", {
    get() {
        return __config.get("email");
    },
    enumerable: true,
});

/**
 * Master password of the Vault. Do not commit this information in Git unless you know what you're doing. Prefer using a
 * Terraform `variable {}` in order to inject this value from the environment.
 */
export declare const masterPassword: string | undefined;
Object.defineProperty(exports, "masterPassword", {
    get() {
        return __config.get("masterPassword");
    },
    enumerable: true,
});

/**
 * Bitwarden Server URL (default: https://vault.bitwarden.com).
 */
export declare const server: string | undefined;
Object.defineProperty(exports, "server", {
    get() {
        return __config.get("server");
    },
    enumerable: true,
});

/**
 * (EXPERIMENTAL) A Bitwarden Session Key.
 */
export declare const sessionKey: string | undefined;
Object.defineProperty(exports, "sessionKey", {
    get() {
        return __config.get("sessionKey");
    },
    enumerable: true,
});

/**
 * Alternative directory for storing the Vault locally.
 */
export declare const vaultPath: string | undefined;
Object.defineProperty(exports, "vaultPath", {
    get() {
        return __config.get("vaultPath");
    },
    enumerable: true,
});

